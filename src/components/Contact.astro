<article class="grid grid-cols-1 md:grid-cols-2 gap-8">
  <div>
    <p class="text-zinc-300 text-base sm:text-xl md:text-lg opacity-75">
      ¿ Proyecto en mente o vacante ? Estoy disponible para trabajar o
      colaboraciones.
    </p>
    <div class="text-zinc-300 opacity-75 text-base mt-4">
      <h3>Ubicación:</h3>
      <p>Madrid - España</p>
    </div>
  </div>
  <div>
    <form
      name="contact"
      method="POST"
      data-netlify="true"
      netlify-honeypot="bot-field"
      class="flex flex-col gap-4"
    >
      <input type="hidden" name="form-name" value="contact" />
      <input type="hidden" name="bot-field" />

      <input
        type="text"
        name="username"
        id="username"
        placeholder="Nombre"
        required
        class="px-4 py-2 border border-purple-400/70 hover:bg-white/5 rounded-lg focus:outline-none focus:ring-1 transition duration-300 ease-out md:ease-in"
      />

      <input
        type="email"
        name="email"
        placeholder="Email"
        required
        class="px-4 py-2 border border-purple-400/70 hover:bg-white/5 rounded-lg focus:outline-none focus:ring-1 transition duration-300 ease-out md:ease-in"
      />
      <textarea
        name="message"
        placeholder="Mensaje"
        required
        class="px-4 py-2 border border-purple-400/70 hover:bg-white/5 text-zinc-300 rounded-lg resize-none focus:outline-none focus:ring-1 transition duration-300 ease-out md:ease-in"
        rows="6"></textarea>

      <button
        type="submit"
        class="px-4 py-2 border bg-purple-700 hover:bg-purple-800 text-zinc-300 rounded-lg focus:outline-none focus:ring-1 transition duration-300 ease-out md:ease-in"
      >
        Enviar
      </button>
    </form>

    <p id="form-status" class="mt-4 hidden text-green-500">
      ¡Mensaje enviado con éxito!
    </p>

    <script>
      const form = document.getElementById("contact-form") as HTMLFormElement;
      const status = document.getElementById(
        "form-status"
      ) as HTMLParagraphElement;

      if (form && status) {
        form.addEventListener("submit", async (e) => {
          e.preventDefault();

          const data = new FormData(form);

          try {
            await fetch("/", {
              method: "POST",
              body: data,
            });

            status.textContent = "¡Gracias por tu mensaje!";
            status.classList.remove("hidden");
            status.classList.add("text-green-500");
            form.reset();
          } catch (error) {
            status.textContent = "Hubo un problema. Inténtelo más tarde.";
            status.classList.remove("hidden");
            status.classList.add("text-red-500");
          }

          setTimeout(() => {
            status.classList.add("hidden");
          }, 4000);
        });
      }
    </script>
  </div>
</article>
